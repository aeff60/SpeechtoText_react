{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aeff\\\\Desktop\\\\sandboxProject\\\\voiceTextTut\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-TH';\n\nfunction App() {\n  const [isListening, setIsListening] = useState(false);\n  const [note, setNote] = useState(null);\n  const [savedNotes, setSavedNotes] = useState([]);\n  useEffect(() => {\n    handleListen();\n  }, [isListening]);\n\n  const handleListen = () => {\n    if (isListening) {\n      mic.start();\n\n      mic.onend = () => {\n        console.log('continue..');\n        mic.start();\n      };\n    } else {\n      mic.stop();\n\n      mic.onend = () => {\n        console.log('Stopped Mic on Click');\n      };\n    }\n\n    mic.onstart = () => {\n      console.log('Mics on');\n    };\n\n    mic.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      console.log(transcript);\n      setNote(transcript);\n\n      mic.onerror = event => {\n        console.log(event.error);\n      };\n    };\n  };\n\n  const handleSaveNote = () => {\n    setSavedNotes([...savedNotes, note]);\n    setNote('');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Speech To Text\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"\\u0E41\\u0E1B\\u0E25\\u0E07\\u0E40\\u0E2A\\u0E35\\u0E22\\u0E07\\u0E1E\\u0E39\\u0E14\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\"), isListening ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }\n  }, \"\\uD83C\\uDF99\\uFE0F\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, \"\\uD83D\\uDED1\\uD83C\\uDF99\\uFE0F\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, note)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"\\u0E2A\\u0E48\\u0E27\\u0E19\\u0E17\\u0E35\\u0E48\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"), savedNotes.map(n => /*#__PURE__*/React.createElement(\"p\", {\n    key: n,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, n)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSaveNote,\n    disabled: !note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsListening(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"\\u0E40\\u0E23\\u0E34\\u0E48\\u0E21/\\u0E2B\\u0E22\\u0E38\\u0E14\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Aeff/Desktop/sandboxProject/voiceTextTut/src/App.js"],"names":["React","useState","useEffect","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","App","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","handleListen","start","onend","console","log","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","handleSaveNote","n","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './App.css'\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst mic = new SpeechRecognition()\r\n\r\nmic.continuous = true\r\nmic.interimResults = true\r\nmic.lang = 'th-TH'\r\n\r\nfunction App() {\r\n  const [isListening, setIsListening] = useState(false)\r\n  const [note, setNote] = useState(null)\r\n  const [savedNotes, setSavedNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    handleListen()\r\n  }, [isListening])\r\n\r\n  const handleListen = () => {\r\n    if (isListening) {\r\n      mic.start()\r\n      mic.onend = () => {\r\n        console.log('continue..')\r\n        mic.start()\r\n      }\r\n    } else {\r\n      mic.stop()\r\n      mic.onend = () => {\r\n        console.log('Stopped Mic on Click')\r\n      }\r\n    }\r\n    mic.onstart = () => {\r\n      console.log('Mics on')\r\n    }\r\n\r\n    mic.onresult = event => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('')\r\n      console.log(transcript)\r\n      setNote(transcript)\r\n      mic.onerror = event => {\r\n        console.log(event.error)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSaveNote = () => {\r\n    setSavedNotes([...savedNotes, note])\r\n    setNote('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Speech To Text</h1>\r\n      <div className=\"container\">\r\n        <div className=\"box\">\r\n          <h2>แปลงเสียงพูดเป็นข้อความ</h2>\r\n          {isListening ? <span>🎙️</span> : <span>🛑🎙️</span>}\r\n          \r\n          <p>{note}</p>\r\n        </div>\r\n        <div className=\"box\">\r\n          <h2>ส่วนที่บันทึก</h2>\r\n          {savedNotes.map(n => (\r\n            <p key={n}>{n}</p>\r\n          ))}\r\n          <button onClick={handleSaveNote} disabled={!note}>\r\n            บันทึก\r\n          </button>\r\n          <button onClick={() => setIsListening(prevState => !prevState)}>\r\n            เริ่ม/หยุด\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default App"]},"metadata":{},"sourceType":"module"}